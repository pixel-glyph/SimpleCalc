{"version":3,"sources":["app.js"],"names":["storeNum","ans","innerHTML","val1","currentOp","fullClear","form","insertAdjacentHTML","this","numsInputted","push","operation","test","slice","length","val","join","val2","compute","Math","pow","eval","semiClear","document","getElementById","nums","getElementsByClassName","ops","i","addEventListener","j","pop","indexOf","apply"],"mappings":"CACA,WAaA,QAAAA,YAIAC,IAAAC,YAAAC,MAAA,KAAAC,WACAC,YAIAC,KAAAC,mBAAA,YAAAC,KAAAN,WACAO,aAAAC,KAAAF,KAAAN,WAKA,QAAAS,aAIA,aAAAC,KAAAN,KAAAJ,WAyCA,MAAAM,KAAAN,WAAA,UAAAU,KAAAN,KAAAJ,YAGAI,KAAAC,mBAAA,YAAAC,KAAAN,WACAO,aAAAC,KAAAF,KAAAN,YAOA,iBAAAU,KAAAN,KAAAJ,aAGAI,KAAAJ,UAAAI,KAAAJ,UAAAW,MAAA,EAAA,IAAAL,KAAAN,UACAE,UAAAI,KAAAN,YAtDAO,aAAAK,QAIAC,IAAAN,aAAAO,KAAA,IACAP,gBACAH,KAAAC,mBAAA,YAAAC,KAAAN,WAMA,KAAAC,MACAc,KAAAF,IACAG,WAEAf,KAAAY,KAIAd,IAAAC,YAAAC,KAIAG,KAAAC,mBAAA,YAAAJ,KAAAK,KAAAN,YAMAC,KAAA,EACAG,KAAAC,mBAAA,YAAA,IAAAC,KAAAN,YAKAE,UAAAI,KAAAN,WAwBA,QAAAgB,WAIA,MAAAd,UACAH,IAAAC,UAAAiB,KAAAC,IAAAjB,KAAAc,MACAhB,IAAAC,UAAAmB,KAAAlB,KAAAC,UAAAa,MAEAd,KAAAF,IAAAC,UAIA,QAAAG,aAGAiB,YACArB,IAAAC,UAAA,IACAC,KAAA,GAIA,QAAAmB,aAGAhB,KAAAJ,UAAA,GACAO,gBACAL,UAAA,GACAa,KAAA,GAMA,IAAA,GA5HAhB,KAAAsB,SAAAC,eAAA,iBACAlB,KAAAiB,SAAAC,eAAA,kBACAC,KAAAF,SAAAG,uBAAA,OACAC,IAAAJ,SAAAG,uBAAA,MACAjB,gBACAN,KAAA,GACAc,KAAA,GACAF,IAAAX,UAqHAwB,EAAA,EAAAA,EAAAH,KAAAX,OAAAc,IACAH,KAAAG,GAAAC,iBAAA,QAAA7B,SAIA,KAAA,GAAA8B,GAAA,EAAAA,EAAAH,IAAAb,OAAAgB,IACAH,IAAAG,GAAAD,iBAAA,QAAAlB,UAGAY,UAAAC,eAAA,SAAAK,iBAAA,QAAA,WAEAxB,cAIAkB,SAAAC,eAAA,UAAAK,iBAAA,QAAA,WAIAZ,KAAAR,aAAAO,KAAA,IACAE,UACAI,cAIAC,SAAAC,eAAA,UAAAK,iBAAA,QAAA,WAIApB,aAAAK,SACAL,aAAAsB,MACAzB,KAAAJ,UAAAI,KAAAJ,UAAAW,MAAA,EAAA,OAKAU,SAAAC,eAAA,WAAAK,iBAAA,QAAA,WAGA,KAAApB,aAAAuB,QAAA,MACAhC,SAAAiC,MAAAzB","file":"app.min.js","sourcesContent":["\n(function() {\n\n\n\tvar ans = document.getElementById('answer-output'),\n\t\t\tform = document.getElementById('formula-output'),\n\t\t\tnums = document.getElementsByClassName('num'),\n\t\t\tops = document.getElementsByClassName('op'),\n\t\t\tnumsInputted = [],\n\t\t\tval1 = '',\n\t\t\tval2 = '',\n\t\t\tval, currentOp;\n\n\n\tfunction storeNum() {\n\n\t\t// check if last click was equals button. If so, clear out\n\t\t// all values before storing current number click\n\t\tif(ans.innerHTML === val1 && currentOp === '') {\n\t\t\tfullClear();\n\t\t}\n\t\t// display input in equation field and store individual nums\n\t\t// into an array\n\t\tform.insertAdjacentHTML('beforeend', this.innerHTML);\n\t\tnumsInputted.push(this.innerHTML);\n\n\t}\n\n\t// called only when an operator is clicked (+,-,*,/,^)\n\tfunction operation() {\n\n\t\t// check if previous click was an operator and not a number\n\t\t// if so, proceed to next block\n\t\tif( !/[+\\-*\\/^]$/.test(form.innerHTML) ) {\n\n\t\t\tif(numsInputted.length) {\n\n\t\t\t\t// if nums array is populated, store values in val,\n\t\t\t\t// clear array, and show current op in equation display\n\t\t\t\tval = numsInputted.join('');\n\t\t\t\tnumsInputted = [];\n\t\t\t\tform.insertAdjacentHTML('beforeend', this.innerHTML);\n\n\t\t\t\t// if val1 contains a value, val2 gets last input and\n\t\t\t\t// compute is called, else val1 is assigned the input\n\t\t\t\t// this will dynamically show the answer each time an\n\t\t\t\t// op is clicked\n\t\t\t\tif(val1 !== '') {\n\t\t\t\t\tval2 = val;\n\t\t\t\t\tcompute();\n\t\t\t\t} else {\n\t\t\t\t\tval1 = val;\n\t\t\t\t}\n\n\t\t\t\t// this will be true when an op is clicked after equals\n\t\t\t} else if(ans.innerHTML === val1) {\n\n\t\t\t\t// and so the previous answer and current op will be\n\t\t\t\t// displayed in equation field\n\t\t\t\tform.insertAdjacentHTML('beforeend', val1 + this.innerHTML);\n\n\t\t\t} else {\n\n\t\t\t\t// when no numbers have yet been\n\t\t\t\t// entered, 0 is used as first val\n\t\t\t\tval1 = 0;\n\t\t\t\tform.insertAdjacentHTML('beforeend', '0' + this.innerHTML);\n\n\t\t\t}\n\n\t\t\t// store currently selected op\n\t\t\tcurrentOp = this.innerHTML;\n\n\t\t\t// if minus is clicked as a negator after *, /, or ^\n\t\t} else if( this.innerHTML === '-' && /[*\\/^]$/.test(form.innerHTML) ) {\n\n\t\t\t// add it to display, push to nums array, and keep currentOp as is\n\t\t\tform.insertAdjacentHTML('beforeend', this.innerHTML);\n\t\t\tnumsInputted.push(this.innerHTML);\n\n\t\t\t// finally check if last two chars in equation field are any op\n\t\t\t// followed by a minus (as a negator to a future num input)\n\t\t\t// if this is not the case, overwrite previous op with current op\n\t\t\t// the prevents overwriting a minus acting as a negator with the\n\t\t\t// current op\n\t\t} else if( !/[+\\-*\\/^][\\-]$/.test(form.innerHTML) ) {\n\n\t\t\t// replace last char in equation field and update currentOp\n\t\t\tform.innerHTML = form.innerHTML.slice(0, -1) + this.innerHTML;\n\t\t\tcurrentOp = this.innerHTML;\n\n\t\t}\n\n\t}\n\n\tfunction compute() {\n\n\t\t// perform proper calculation based on currentOp then store the\n\t\t// result in val1 in case next calculation is chained\n\t\tcurrentOp === '^' ?\n\t\t\t\tans.innerHTML = Math.pow(val1, val2) :\n\t\t\t\tans.innerHTML = eval(val1 + currentOp + val2);\n\n\t\tval1 = ans.innerHTML;\n\n\t}\n\n\tfunction fullClear() {\n\n\t\t// clears out all stored values\n\t\tsemiClear();\n\t\tans.innerHTML = '0';\n\t\tval1 = '';\n\n\t}\n\n\tfunction semiClear() {\n\n\t\t// keeps val1 and doesn't wipe answer display\n\t\tform.innerHTML = '';\n\t\tnumsInputted = [];\n\t\tcurrentOp = '';\n\t\tval2 = '';\n\n\t}\n\n\n\t// add handlers to numbered inputs\n\tfor(var i=0; i<nums.length; i++) {\n\t\tnums[i].addEventListener('click', storeNum);\n\t}\n\n\t// add handlers to operation inputs\n\tfor (var j=0; j<ops.length; j++) {\n\t\tops[j].addEventListener('click', operation);\n\t}\n\n\tdocument.getElementById('clear').addEventListener('click', function() {\n\n\t\tfullClear();\n\n\t});\n\n\tdocument.getElementById('equals').addEventListener('click', function() {\n\n\t\t// store second value, perform calculation, then call semiClear in\n\t\t// case next input is an op\n\t\tval2 = numsInputted.join('');\n\t\tcompute();\n\t\tsemiClear();\n\n\t});\n\n\tdocument.getElementById('delete').addEventListener('click', function() {\n\n\t\t// remove last value in nums array and last char in equation display\n\t\t// but only if nums array is not empty (input is only removed to last op)\n\t\tif(numsInputted.length) {\n\t\t\tnumsInputted.pop();\n\t\t\tform.innerHTML = form.innerHTML.slice(0, -1);\n\t\t}\n\n\t});\n\n\tdocument.getElementById('decimal').addEventListener('click', function() {\n\n\t\t// only store decimal if not already in nums array (no double decimals!)\n\t\tif(numsInputted.indexOf('.') === -1) {\n\t\t\tstoreNum.apply(this);\n\t\t}\n\n\t});\n\n\n})();\n"],"sourceRoot":"/source/"}